{"version":3,"sources":["img/Anastasiya.png","components/Sidebar/styles.js","components/Sidebar/Sidebar.js","components/Sidebar/index.js","components/UserHeader/styles.js","components/UserHeader/index.js","components/UserHeader/UserHeader.js","components/MobileNav/styles.js","components/MobileNav/index.js","components/MobileNav/MobileNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","pages/Me/styles.js","pages/Me/index.js","pages/Me/Me.js","pages/Projects/styles.js","pages/Projects/index.js","pages/Projects/Projects.js","pages/Work/styles.js","pages/Work/index.js","pages/Work/Work.js","pages/Education/styles.js","pages/Education/index.js","pages/Education/Education.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledSideNav","styled","SideNav","items","name","path","Sidebar","location","useLocation","ifFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","HeaderContainer","div","isHome","Header","Image","img","UserHeader","a","user","src","profilepic","basics","label","region","headline","href","blog","target","rel","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","StyledContent","Content","Layout","children","SectionTitle","h3","Paragraph","p","Pill","span","blue","ProfileLink","li","Me","summary","skills","skill","profiles","profile","network","url","ProjectItem","white","ProjectTitle","h4","SkillContainer","Projects","projects","project","languages","libraries","item","j","WorkItem","WorkTitle","JobTitle","Work","work","position","company","start","year","end","EducationItem","Institution","Degree","Education","education","studyType","area","description","replace","Pages","exact","App","useState","setUser","useEffect","fetch","then","res","json","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ae44ba8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Anastasiya.533d2af6.png\";","import styled from 'styled-components'\r\nimport { SideNav } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledSideNav = styled(SideNav)`\r\n    @media(max-width: 640px){\r\n        display: none;\r\n    }\r\n`","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { SideNavItems, SideNavLink } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nimport { StyledSideNav } from './styles'\r\n\r\nconst items = [\r\n    {name: 'Me', path: '/'},\r\n    {name: 'Projects', path: '/projects'},\r\n    {name: 'Work', path: '/work'},\r\n    {name: 'Education', path: '/education'},\r\n]\r\n\r\nconst Sidebar = () => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <StyledSideNav ifFixedNav expanded isChildOfHeader={false} aria-label=\"Side navigation\">\r\n            <SideNavItems>\r\n                {items.map(i => (\r\n                    <SideNavLink\r\n                        isActive={\r\n                            location.pathname === '/' && i.path === '/' ? true: location.pathname === i.path\r\n                        }\r\n                        element = { Link }\r\n                        to = { i.path }\r\n                        key = { i.name }\r\n                    >\r\n                        { i.name }\r\n                    </SideNavLink>\r\n                ))}\r\n            </SideNavItems>\r\n        </StyledSideNav>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import Sidebar from './Sidebar'\r\n\r\nexport default Sidebar","import styled from 'styled-components'\r\n\r\nexport const HeaderContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: 640px){\r\n        display: ${ ({ isHome }) => (!isHome ? 'none' : 'flex')};\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n\r\n    @media (max-width: 640px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 200px;\r\n    margin-right: 1rem;\r\n    border-radius: 2px;\r\n`\r\n\r\nexport const ViewResumeLink = styled.a`\r\n    display: flex;\r\n    text-decoration: none;\r\n    padding: 0.75rem 1.5rem;\r\n    font-weight: bold;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n    border: 2px solid #2ecc40;\r\n    background-color: rgba(46, 204, 64, 0.3);\r\n    transition: background-color 250mx ease;\r\n\r\n    &: hover {\r\n        background-color: #2ecc40;\r\n    }\r\n\r\n    svg {\r\n        fill: white;\r\n        margin-left: 8px;\r\n    }\r\n`","import UserHeader from './UserHeader'\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { ArrowRight16 } from '@carbon/icons-react'\r\nimport profilepic from '../../img/Anastasiya.png'\r\n\r\nimport { HeaderContainer,Header, Image, ViewResumeLink } from './styles'\r\n\r\nconst UserHeader = ({ user }) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <HeaderContainer isHome={location.pathname === '/'}>\r\n            <Header>\r\n                <Image src={profilepic} /> {/* <Image src={user.basics.picture} /> */}\r\n                <div>\r\n                    <h2> Anastasiya A.</h2>{/* <h2>{user.basics.name}</h2> */}\r\n                    {/* <h4>\r\n                        <a\r\n                            href={`https://gitconnected.com/${user.basics.username}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >\r\n                            @{user.basics.username}\r\n                        </a>\r\n                    </h4> */}\r\n                    <p>{user.basics.label}</p>\r\n                    <p>Coding in {user.basics.region}</p>\r\n                    <p>3 years of experience as a developer</p>\r\n                    {/* <p>{user.basics.yearsOfExperience} years of experience as a developer</p> */}\r\n                    <p>{user.basics.headline}</p>\r\n                    <p>\r\n                        Blog: {''}\r\n                        <a href={user.basics.blog} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                            {user.basics.blog}\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </Header>\r\n            {/* <div>\r\n                <ViewResumeLink\r\n                    href={`https;//gitconnected.com/${user.basics.username}/resume`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <span>View Resume</span>\r\n                    <ArrowRight16/>\r\n                </ViewResumeLink>\r\n            </div> */}\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default UserHeader","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'carbon-components-react/lib/components/Button'\r\n\r\nexport const Container = styled.div`\r\n    display: none;\r\n\r\n    @media( max-width: 640px) {\r\n        display: block;\r\n    }\r\n`\r\n\r\nexport const Spacer = styled.div`\r\n    height: 48px;\r\n`\r\n\r\nexport const NavWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    position: fixed;\r\n    width: 100vw;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n    width: 25%\r\n`\r\n\r\nexport const NavButton = styled(Button)`\r\n    width: 100%;\r\n    justify-content: center;\r\n`","import MobileNav from './MobileNav'\r\n\r\nexport default MobileNav","import React from 'react'\r\nimport { User32, Code32, Portfolio32, Education32 } from '@carbon/icons-react'\r\n\r\nimport {Container, Spacer, NavWrapper, NavButton, NavLink} from './styles'\r\n\r\nconst MobileNav = () => {\r\n    return(\r\n        <Container>\r\n            <Spacer />\r\n            <NavWrapper>\r\n                <NavLink to=\"/\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon = { User32 }\r\n                        iconDescription = \"Me\"\r\n                        tooltipPosition = \"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/projects\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon = {Code32}\r\n                        iconDescription = \"Projects\"\r\n                        tooltipPosition = \"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/work\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Portfolio32}\r\n                        iconDescription=\"Work\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/education\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Education32}\r\n                        iconDescription=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n            </NavWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MobileNav","import styled from 'styled-components'\r\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledContent = styled(Content)`\r\n    min-height: 100vh;\r\n    \r\n    @media( max-width: 640px ){\r\n        margin-left: 0 !important;\r\n    }\r\n`","import Layout from './Layout'\r\n\r\nexport default Layout","import React from 'react'\r\nimport Sidebar from '../Sidebar'\r\nimport UserHeader from '../UserHeader'\r\nimport MobileNav from '../MobileNav'\r\n\r\nimport { StyledContent } from './styles'\r\n\r\nconst Layout = ({ user, children }) => {\r\n    return(\r\n        <>\r\n            <MobileNav />\r\n            <Sidebar />\r\n            <StyledContent>\r\n                <UserHeader user={user} />\r\n                <div> {children} </div>\r\n            </StyledContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import styled from 'styled-components'\r\nimport {blue} from '@carbon/colors'\r\n\r\nexport const SectionTitle = styled.h3`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 0.5rem;\r\n`\r\n\r\nexport const Paragraph = styled.p`\r\n    white-space: pre-wrap;\r\n`\r\n\r\nexport const Pill = styled.span`\r\n    display: inline-block;\r\n    margin-right: 0.75rem;\r\n    margin-bottom: 0.75rem;\r\n    padding: 0.5rem 1rem;\r\n    background-color: ${blue[20]};\r\n    color: ${blue[70]};\r\n    border: 3px solid ${blue[70]};\r\n    border-radius: 2px;\r\n    font-weight: bold;\r\n`","import styled from 'styled-components'\r\n\r\nexport const ProfileLink = styled.li`\r\n    margin-right: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    display: inline-block;\r\n    font-size: 18px;\r\n`\r\n\r\n","import Me from './Me'\r\n\r\nexport default Me","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { SectionTitle, Paragraph, Pill } from '../../styles'\r\nimport { ProfileLink } from './styles'\r\n\r\nconst Me = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle> About Me</SectionTitle>\r\n                <Paragraph> { user.basics.summary }</Paragraph>\r\n            </div>\r\n            <div>\r\n                <SectionTitle>Skills</SectionTitle>\r\n                <div>\r\n                    {user.skills.map( skill => (\r\n                        <Pill key={skill.name}>{ skill.name }</Pill>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <SectionTitle>Profiles</SectionTitle>\r\n                <ul>\r\n                    {user.basics.profiles.map((profile, i) => (\r\n                        <ProfileLink key={profile.network}>\r\n                            {i !== 0 && '|'}\r\n                            <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                                {profile.network}\r\n                            </a>\r\n                        </ProfileLink>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Me","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const ProjectItem = styled.li`\r\n    margin-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const ProjectTitle = styled.h4`\r\n    font-weight: bold;\r\n`\r\n\r\nexport const SkillContainer = styled.div`\r\n    margin-top: 1.2rem;\r\n`","import Projects from './Projects'\r\n\r\nexport default Projects","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { SectionTitle, Pill } from '../../styles'\r\nimport { ProjectItem, ProjectTitle, SkillContainer } from './styles'\r\n\r\nconst Projects = ({ user }) => {\r\n    return (\r\n        <Layout user = { user }>\r\n            <div>\r\n                <SectionTitle>Projects</SectionTitle>\r\n                <ul>\r\n                    {user.projects.map((project, i) => (\r\n                        <ProjectItem key={i}>\r\n                            <ProjectTitle> {project.name}</ProjectTitle>\r\n                            <p>{project.summary}</p>\r\n                            <SkillContainer>\r\n                                {[...project.languages, ...project.libraries].map((item, j) => (\r\n                                    <Pill key={j}>{item}</Pill>\r\n                                ))}\r\n                            </SkillContainer>\r\n                        </ProjectItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Projects","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const WorkItem = styled.li`\r\n    marin-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const WorkTitle = styled.h4`\r\n    font-weight: bold;\r\n`\r\n\r\nexport const JobTitle = styled.p`\r\n    font-weight: bold;\r\n    display; inline-block;\r\n`","import Work from './Work'\r\n\r\nexport default Work","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { SectionTitle, Paragraph } from '../../styles'\r\nimport { WorkItem, WorkTitle, JobTitle } from './styles'\r\n\r\nconst Work = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>Work</SectionTitle>\r\n                <ul>\r\n                    {user.work.map((work, i) => (\r\n                        <WorkItem key={i}>\r\n                            <WorkTitle>{work.position}</WorkTitle>\r\n                            <div>\r\n                                <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\r\n                                <span> &sdot; </span>\r\n                                <span>\r\n                                    {work.start.year} to {work.end.year}\r\n                                </span>\r\n                            </div>\r\n                            <Paragraph>{work.summary}</Paragraph> \r\n                        </WorkItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Work","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const EducationItem = styled.li`\r\n    margin-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const Institution = styled.h4`\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Degree = styled.p`\r\n    font-weight: bold;\r\n    display: inline-block;\r\n`","import Education from './Education'\r\n\r\nexport default Education","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { SectionTitle, Paragraph } from '../../styles'\r\nimport { EducationItem, Institution, Degree } from './styles'\r\n\r\nconst Education = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>Education</SectionTitle>\r\n                <ul>\r\n                    {user.education.map((education, i) => (\r\n                        <EducationItem key={i}>\r\n                            <Institution>{education.position}</Institution>\r\n                            <div>\r\n                                <Degree>\r\n                                    {education.studyType}, {education.area}\r\n                                </Degree>{' '}\r\n                                <span> &sdot; </span>\r\n                                <span>\r\n                                    {education.start.year} to {education.end.year}\r\n                                </span>\r\n                            </div>\r\n                            <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\r\n                        </EducationItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Education","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Me from './Me'\r\nimport Projects from './Projects'\r\nimport Work from './Work'\r\nimport Education from './Education'\r\n\r\nconst Pages = ({ user }) => {\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Me user={user} />\r\n                </Route>\r\n                <Route path='/projects'>\r\n                    <Projects user={user} />\r\n                </Route>\r\n                <Route path=\"/work\">\r\n                    <Work user={user} />\r\n                </Route>\r\n                <Route path=\"/education\">\r\n                    <Education user={user} />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Pages","import React, {useState, useEffect} from 'react'\r\nimport Pages from './pages'\r\n\r\nfunction App(){\r\n    const [user, setUser] = useState(null)\r\n    useEffect(() => {\r\n        fetch('https://gitconnected.com/v1/portfolio/treyhuffine')\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                setUser(user)\r\n            })\r\n    }, [])\r\n\r\n    if(!user) {\r\n        return <div />\r\n    }\r\n\r\n    return <Pages user={user} />\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}